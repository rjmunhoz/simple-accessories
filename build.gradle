plugins {
  id 'fabric-loom' version '0.4-SNAPSHOT'
  id 'maven-publish'
  id "com.matthewprenger.cursegradle" version "1.4.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
  minecraft "com.mojang:minecraft:1.16.1"
  mappings "net.fabricmc:yarn:1.16.1+build.21:v2"
  modImplementation "net.fabricmc:fabric-loader:0.8.9+build.203"

  //Fabric api
  modImplementation "net.fabricmc.fabric-api:fabric-api:0.8.9+build.203"

  modImplementation "com.github.emilyploszaj:trinkets:v2.6.3"
  modImplementation "io.github.prospector:modmenu:1.12.2+build.17"

  modRuntime ("com.lettuce.fudge:notenoughcrashes:2.1.3+1.16.1")

//  modImplementation "io.github.cottonmc:LibGui:2.2.0+1.16.1"
//  include "io.github.cottonmc:LibGui:2.2.0+1.16.1"

//  modApi "me.shedaniel.cloth:config-2:4.5.6"
//  include "me.shedaniel.cloth:config-2:4.5.6"
  modImplementation "me.shedaniel.cloth:config-2:4.5.6"

  modImplementation 'me.sargunvohra.mcmods:autoconfig1u:3.2.0-unstable'
//  implementation 'me.sargunvohra.mcmods:autoconfig1u:3.2.0-unstable'

  "blue.endless:jankson:1.1.0"
}

processResources {
  inputs.property "version", project.version

  from(sourceSets.main.resources.srcDirs) {
    include "fabric.mod.json"
    expand "version": project.version
  }

  from(sourceSets.main.resources.srcDirs) {
    exclude "fabric.mod.json"
  }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = "sources"
  from sourceSets.main.allSource
}

jar {
  from "LICENSE"
}

repositories {
  maven {
    url = "https://jitpack.io"
  }
  maven {
    name = "NerdHubMC"
    url = "https://maven.abusedmaster.xyz/"
  }

  mavenCentral()
  jcenter()
}

// configure the maven publication
publishing {
  publications {
    mavenJava(MavenPublication) {
      // add all the jars that should be included when publishing to maven
      artifact(remapJar) {
        builtBy remapJar
      }
      artifact(sourcesJar) {
        builtBy remapSourcesJar
      }
    }
  }

  // select the repositories you want to publish to
  repositories {
    // uncomment to publish to the local maven
    // mavenLocal()
  }
}

curseforge {
  apiKey = project.cf_api_key

  project {
    id = project.cf_id
    releaseType = project.cf_release_type
    changelogType = "markdown"
    changelog = file("CHANGELOG.md")
    addGameVersion project.minecraft_version
    addGameVersion "Java 8"
    addGameVersion "Fabric"

    relations {
      requiredDependency "fabric-api"
      requiredDependency "trinkets-fabric"
      tool "modmenu"
    }

    mainArtifact(remapJar) {
      displayName = "Simple Accessories $project.version"
    }
  }
}
